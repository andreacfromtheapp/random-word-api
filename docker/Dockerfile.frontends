# Elm Frontend Builder
FROM node:22-slim AS elm-builder

# Install ca-certificates for SSL connections
RUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy Elm frontend
COPY fe-elm_speakandspell ./fe-elm_speakandspell

# Build Elm frontend - install deps without problematic imagemin
RUN cd fe-elm_speakandspell && npm install --ignore-scripts && npx elm-tooling install && npx vite build --base=/play/

# Rust Leptos Frontends Builder
FROM rust:1.88.0-slim AS leptos-builder

# Install trunk and wasm32 target
RUN rustup target add wasm32-unknown-unknown
RUN cargo install trunk

WORKDIR /app

# Copy the leptos frontend directly
COPY fe-leptos-landingpage ./fe-leptos-landingpage

# Build Leptos frontends with SPS_URL set to /play
RUN cd fe-leptos-landingpage && SPS_URL=/play trunk build --release

# Final Nginx Stage
FROM nginx:alpine

# Install apache2-utils for htpasswd
RUN apk add --no-cache apache2-utils

# Create directory structure
RUN mkdir -p /usr/share/nginx/html/leptos-landingpage /usr/share/nginx/html/elm-speakandspell

# Copy built frontends
COPY --from=elm-builder /app/fe-elm_speakandspell/dist /usr/share/nginx/html/elm-speakandspell
COPY --from=leptos-builder /app/fe-leptos-landingpage/dist /usr/share/nginx/html/leptos-landingpage

# Create htpasswd file for authentication
RUN htpasswd -b -c /etc/nginx/.htpasswd admin admin

# Custom Nginx Configuration
COPY docker/nginx/nginx.conf /etc/nginx/nginx.conf
COPY docker/nginx/nginx-frontends.conf /etc/nginx/conf.d/default.conf

EXPOSE 8080

CMD ["nginx", "-g", "daemon off;"]

