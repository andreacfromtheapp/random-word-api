# Dockerfile.frontends
FROM node:22-alpine AS elm-builder

# Install build dependencies
RUN apk add --no-cache autoconf automake libtool gcc musl-dev

WORKDIR /app/fe-elm_speakandspell

# Copy Elm project files
COPY fe-elm_speakandspell/package.json fe-elm_speakandspell/package-lock.json ./
COPY fe-elm_speakandspell/vite.config.js ./
COPY fe-elm_speakandspell/index.html ./
COPY fe-elm_speakandspell/src ./src

# Install dependencies and build
RUN npm install
RUN npm run build

# Rust Leptos Frontends Builder
FROM rust:1.88.0-slim AS leptos-builder

# Install trunk and wasm32 target
RUN rustup target add wasm32-unknown-unknown
RUN cargo install trunk

WORKDIR /app

# Copy workspace files for Leptos frontends
COPY Cargo.toml Cargo.lock ./
COPY fe-leptos-landingpage /app/fe-leptos-landingpage
COPY fe-leptos-randomword /app/fe-leptos-randomword

# Build Leptos frontends
RUN cd fe-leptos-landingpage && trunk build --release
RUN cd fe-leptos-randomword && trunk build --release

# Final Nginx Stage
FROM nginx:alpine

# Install apache2-utils for htpasswd
RUN apk add --no-cache apache2-utils

# Create directory structure
RUN mkdir -p /usr/share/nginx/html/elm-speakandspell
RUN mkdir -p /usr/share/nginx/html/leptos-landingpage
RUN mkdir -p /usr/share/nginx/html/leptos-randomword

# Copy built Elm frontend (Vite build)
COPY --from=elm-builder /app/fe-elm_speakandspell/dist /usr/share/nginx/html/elm-speakandspell

# Copy built Leptos frontends
COPY --from=leptos-builder /app/fe-leptos-landimgpage/dist /usr/share/nginx/html/leptos-landingpage
COPY --from=leptos-builder /app/fe-leptos-randomword/dist /usr/share/nginx/html/leptos-randomword

# Create htpasswd file for authentication
RUN htpasswd -b -c /etc/nginx/.htpasswd admin admin

# Custom Nginx Configuration
COPY docker/nginx/nginx.conf /etc/nginx/nginx.conf
COPY docker/nginx/nginx-frontends.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]

